{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wajdi\\\\OneDrive\\\\Documents\\\\Stage\\\\PointSystem\\\\Front\\\\src\\\\jsx\\\\components\\\\Dashboard\\\\AddCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport 'rsuite/dist/styles/rsuite-default.min.css';\nimport { Form, FormGroup, FormControl, ControlLabel, ButtonToolbar, Button, Input } from 'rsuite';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddCompany() {\n  _s();\n\n  let history = useHistory();\n  const [users, setUsers] = useState([]);\n  const [nom, setNom] = useState('');\n  const [code, setCode] = useState('');\n  const [supad, setSupad] = useState('');\n  const [data, setData] = useState(null);\n\n  const updateNom = event => {\n    setNom(event);\n    console.log(nom);\n  };\n\n  const updateSupad = event => {\n    setSupad(event);\n    console.log(nom);\n  };\n\n  const handleSubmit = () => {\n    const data = {\n      Nom: nom,\n      Code: code,\n      SUPAD: supad\n    };\n    axios.post('http://localhost:4000/societes/create', data).then(res => {\n      setData(res.data);\n      history.push(\"/company\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const fetchUsers = () => {\n    axios.get(\"http://localhost:4000/users\").then(response => {\n      setUsers(response.data);\n    });\n  };\n\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    setIsLoaded(true);\n    setCode(uuidv4());\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Company's Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: 300\n            },\n            name: \"name\",\n            value: nom,\n            onChange: event => updateNom(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Company's Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: 300\n            },\n            placeholder: code,\n            value: code,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-select\",\n            \"aria-label\": \"Default select example\",\n            value: supad,\n            onChange: event => updateSupad(event),\n            children: users && users.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: item.Role == \"admin\" ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.name,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 47\n              }, this) : \"\"\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              appearance: \"primary\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              appearance: \"default\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCompany, \"aueUxkDtKTzBpyGjmMTWEcCajKo=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCompany\");","map":{"version":3,"sources":["C:/Users/wajdi/OneDrive/Documents/Stage/PointSystem/Front/src/jsx/components/Dashboard/AddCompany.js"],"names":["React","useState","useEffect","axios","Form","FormGroup","FormControl","ControlLabel","ButtonToolbar","Button","Input","useHistory","AddCompany","history","users","setUsers","nom","setNom","code","setCode","supad","setSupad","data","setData","updateNom","event","console","log","updateSupad","handleSubmit","Nom","Code","SUPAD","post","then","res","push","catch","err","fetchUsers","get","response","uuidv4","replace","c","r","Math","random","v","toString","isLoaded","setIsLoaded","width","map","item","Role","name"],"mappings":"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","sourcesContent":["import React, {  useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport 'rsuite/dist/styles/rsuite-default.min.css'\nimport { Form, FormGroup, FormControl, ControlLabel, ButtonToolbar, Button,  Input } from 'rsuite'\nimport { useHistory } from \"react-router-dom\";\n\nexport default function AddCompany() {\n  let history = useHistory();\n  const [users, setUsers] = useState([]); \n  const [nom, setNom] = useState('');\n  const [code, setCode] = useState('');\n  const [supad, setSupad] = useState('');\n\n  const [data, setData] = useState(null);\n  const updateNom = (event) => { setNom(event);console.log(nom) }\n  const updateSupad = (event) => { setSupad(event);console.log(nom) }\n\n  const handleSubmit = () => {\n    const data = {\n      Nom: nom,\n      Code: code,\n      SUPAD:supad\n    }\n    axios.post('http://localhost:4000/societes/create', data).then(res => {\n      setData(res.data);\n      history.push(\"/company\");\n\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n    const fetchUsers = () => {axios.get(\"http://localhost:4000/users\").then((response) => {setUsers(response.data);})};\n    function uuidv4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n          return v.toString(16);\n        });\n      }\n      const [isLoaded, setIsLoaded] = useState(false);\n      useEffect(() => {\n        setIsLoaded(true);\n        setCode(uuidv4());\n        fetchUsers();\n    }, []);\n\n  \n    \n\n\n\n    return (\n        <div>   \n                <center>\n                 <Form >\n                    <FormGroup>\n                    <ControlLabel>Company's Name</ControlLabel>\n                    <FormControl style={{ width: 300 }} name=\"name\" value={nom} onChange={(event) => updateNom(event)}/>\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Company's Code</ControlLabel>\n                    <Input style={{ width: 300 }} placeholder={code} value={code} disabled />\n                    </FormGroup>\n                    <FormGroup>\n\n                    <select class=\"form-select\" aria-label=\"Default select example\" value={supad} onChange={(event) => updateSupad(event)}>\n                    {users && users.map((item) =>\n                     <>\n                      {item.Role == \"admin\" ? <option value={item.name}>{item.name}</option> : \"\"} \n                      </>\n                      )}\n                    </select>\n                    </FormGroup>\n                    <FormGroup>\n                    <ButtonToolbar>\n                        <Button appearance=\"primary\" onClick={handleSubmit}>Submit</Button>\n                        <Button appearance=\"default\"  >Cancel</Button>\n                    </ButtonToolbar>\n                    </FormGroup>\n                </Form>\n                </center>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}