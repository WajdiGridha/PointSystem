{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wajdi\\\\OneDrive\\\\Documents\\\\Stage\\\\PointSystem\\\\Front\\\\src\\\\jsx\\\\components\\\\Dashboard\\\\EditTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport 'rsuite/dist/styles/rsuite-default.min.css';\nimport { Form, FormGroup, FormControl, ControlLabel, ButtonToolbar, Button, Input } from 'rsuite';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTask() {\n  _s();\n\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const [nom, setNom] = useState('');\n  const [code, setCode] = useState('');\n  const [points, setPoints] = useState('');\n  const [responsable, setResposable] = useState('');\n  const [etat, setEtat] = useState('');\n  const [description, setDescription] = useState('');\n  const [data, setData] = useState([]);\n\n  const updateNom = event => {\n    setNom(event);\n  };\n\n  const updatePoints = event => {\n    setPoints(event);\n  };\n\n  const updateResponsable = event => {\n    setResposable(event.target.value);\n  };\n\n  const updateEtat = event => {\n    setEtat(event.target.value);\n  };\n\n  const updateDescription = event => {\n    setDescription(event);\n  };\n\n  const handleSubmit = () => {\n    const data = {\n      Nom: nom,\n      Code: code,\n      Points: points,\n      Responsable: responsable,\n      Etat: etat,\n      Description: description\n    };\n    axios.put('http://localhost:4000/taches/updatetache/' + id, data).then(res => {\n      history.push(\"/Task\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const fetchUsers = () => {\n    axios.get(\"http://localhost:4000/users\").then(response => {\n      setUsers(response.data);\n    });\n  };\n\n  const [task, setTask] = useState([]);\n  const c_url = 'http://localhost:4000/taches/tache/' + id;\n\n  const fetchTasks = () => {\n    axios.get(c_url).then(response => {\n      setTask(response.data[0]);\n    });\n  };\n\n  useEffect(() => {\n    fetchTasks();\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Task's Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: 300\n            },\n            name: \"name\",\n            placeholder: task.Nom,\n            onChange: event => updateNom(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Task's Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: 300\n            },\n            placeholder: task.Code,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Task's User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-select\",\n            \"aria-label\": \"Default select example\",\n            onChange: updateResponsable,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: task.Responsable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), users && users.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.name,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 24\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Task's Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: updateEtat,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: task.Etat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"validee\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"progress\",\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"refused\",\n              children: \"Refused\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Task's Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: 300\n            },\n            placeholder: task.Points,\n            onChange: event => updatePoints(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n            children: \"Task's Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: 300\n            },\n            placeholder: task.Description,\n            onChange: event => updateDescription(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              appearance: \"primary\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              appearance: \"default\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditTask, \"YL+0DSPEN/9onma5SF0OoqwqWBc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["C:/Users/wajdi/OneDrive/Documents/Stage/PointSystem/Front/src/jsx/components/Dashboard/EditTask.js"],"names":["React","useState","useEffect","axios","Form","FormGroup","FormControl","ControlLabel","ButtonToolbar","Button","Input","useHistory","useParams","EditTask","history","id","users","setUsers","nom","setNom","code","setCode","points","setPoints","responsable","setResposable","etat","setEtat","description","setDescription","data","setData","updateNom","event","updatePoints","updateResponsable","target","value","updateEtat","updateDescription","handleSubmit","Nom","Code","Points","Responsable","Etat","Description","put","then","res","push","catch","err","console","log","fetchUsers","get","response","task","setTask","c_url","fetchTasks","width","map","item","name"],"mappings":"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","sourcesContent":["import React, {  useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport 'rsuite/dist/styles/rsuite-default.min.css'\nimport { Form, FormGroup, FormControl, ControlLabel, ButtonToolbar, Button,  Input } from 'rsuite'\nimport { useHistory, useParams } from \"react-router-dom\";\n\nexport default function EditTask() {\n  let history = useHistory();\n  let {id} = useParams();\n  const [users, setUsers] = useState([]); \n  const [nom, setNom] = useState('');\n  const [code, setCode] = useState('');\n  const [points, setPoints] = useState('');\n  const [responsable, setResposable] = useState('');\n  const [etat, setEtat] = useState('');\n  const [description, setDescription] = useState('');\n\n  const [data, setData] = useState([]); \n  const updateNom = (event) => { setNom(event)}\n  const updatePoints = (event) => { setPoints(event)}\n  const updateResponsable = (event) => {setResposable(event.target.value)}\n  const updateEtat = (event) => {setEtat(event.target.value)}\n  const updateDescription = (event) => {setDescription(event)}\n\n  const handleSubmit = () => {\n    const data = {\n      Nom: nom,\n      Code: code,\n      Points:points,\n      Responsable:responsable,\n      Etat:etat,\n      Description:description\n    }\n    axios.put('http://localhost:4000/taches/updatetache/'+id, data).then(res => {\n      history.push(\"/Task\");\n\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n    const fetchUsers = () => {axios.get(\"http://localhost:4000/users\").then((response) => {setUsers(response.data);})};\n\n\n    const [task, setTask] = useState([]);\n    const c_url = 'http://localhost:4000/taches/tache/'+id\n    const fetchTasks = () => {\n        axios\n            .get(c_url).then((response) => { setTask(response.data[0]); })\n    };\n    useEffect(() => {\n        fetchTasks();\n        fetchUsers();\n    }, []);\n    \n\n\n\n    return (\n        <div>   \n                <center>\n                 <Form >\n                    <FormGroup>\n                    <ControlLabel>Task's Name</ControlLabel>\n                    <FormControl style={{ width: 300 }} name=\"name\" placeholder={task.Nom}  onChange={(event) => updateNom(event)}/>\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Task's Code</ControlLabel>\n                    <Input style={{ width: 300 }}  placeholder={task.Code} disabled />\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Task's User</ControlLabel>\n                    <select class=\"form-select\" aria-label=\"Default select example\"  onChange={updateResponsable}>\n                    <option selected disabled>\n                      {task.Responsable}\n                            </option>\n                    {users && users.map((item) =>\n                       <option value={item.name}>{item.name}</option> \n                      )}\n                    </select>\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Task's Status</ControlLabel>\n                    <select  onChange={updateEtat}>\n                            <option selected disabled>\n                              {task.Etat}\n                            </option>\n                            <option value=\"validee\">Done</option>\n                            <option value=\"progress\">Progress</option>\n                            <option value=\"refused\">Refused</option>\n                    </select>\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Task's Points</ControlLabel>\n                    <FormControl style={{ width: 300 }} placeholder={task.Points} onChange={(event) => updatePoints(event)}/>\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Task's Description</ControlLabel>\n                    <FormControl style={{ width: 300 }} placeholder={task.Description} onChange={(event) => updateDescription(event)}/>\n                    </FormGroup>\n                    <FormGroup>\n                    <ButtonToolbar>\n                        <Button appearance=\"primary\" onClick={handleSubmit}>Submit</Button>\n                        <Button appearance=\"default\"  >Cancel</Button>\n                    </ButtonToolbar>\n                    </FormGroup>\n                </Form>\n                </center>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}