{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wajdi\\\\OneDrive\\\\Documents\\\\Stage\\\\PointSystem\\\\Front\\\\src\\\\jsx\\\\components\\\\Dashboard\\\\EditEmployer.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport 'rsuite/dist/styles/rsuite-default.min.css';\nimport { Form, FormGroup, FormControl, ControlLabel, ButtonToolbar, Button } from 'rsuite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditEmployer() {\n  _s();\n\n  let history = useHistory();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [apartment, setApartment] = useState('');\n  const [zip, setZip] = useState('');\n  const [country, setCountry] = useState('');\n  const [city, setCity] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('');\n  const [street, setStreet] = useState('');\n  const [societe, setSociete] = useState('');\n  const [companies, setCompanies] = useState('');\n\n  const updateName = event => {\n    setName(event);\n  };\n\n  const updateEmail = event => {\n    setEmail(event);\n  };\n\n  const updatePhone = event => {\n    setPhone(event);\n  };\n\n  const updateApartment = event => {\n    setApartment(event);\n  };\n\n  const updateZip = event => {\n    setZip(event);\n  };\n\n  const updateCountry = event => {\n    setCountry(event);\n  };\n\n  const updateCity = event => {\n    setCity(event);\n  };\n\n  const updateStreet = event => {\n    setStreet(event);\n  };\n\n  const updatePassword = event => {\n    setPassword(event);\n  };\n\n  const updateRole = event => {\n    setRole(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const updateCompany = event => {\n    setSociete(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const handleSubmit = async () => {\n    const params = {\n      name: name,\n      email: email,\n      phone: phone,\n      apartment: apartment,\n      zip: zip,\n      country: country,\n      street: street,\n      city: city,\n      password: password,\n      Role: role,\n      societe: societe\n    }; //var  id = useParams();\n    //console.log(id);\n    //return false;\n\n    let resp = await axios.put(`http://localhost:4000/users/${id}`, params);\n    history.push(\"/Employers\");\n    console.log(resp.status);\n  };\n\n  let {\n    id\n  } = useParams();\n  const [data, setData] = useState(''); //console.log(id)\n\n  const fetchCompanies = () => {\n    axios.get(\"http://localhost:4000/societes\").then(response => {\n      setCompanies(response.data);\n    });\n  };\n\n  const [user, setUser] = useState([]);\n  const u_url = 'http://localhost:4000/users/' + id;\n\n  const fetchUser = () => {\n    axios.get(u_url).then(response => {\n      setUser(response.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchCompanies();\n    fetchUser();\n    console.log(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              placeholder: user.name,\n              onChange: event => updateName(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"email\",\n              placeholder: user.email,\n              onChange: event => updateEmail(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"phone\",\n              placeholder: user.phone,\n              onChange: event => updatePhone(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Apartment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"apartment\",\n              placeholder: user.apartment,\n              onChange: event => updateApartment(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Zip Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"zip\",\n              placeholder: user.zip,\n              onChange: event => updateZip(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"city\",\n              placeholder: user.city,\n              onChange: event => updateCity(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Street\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"street\",\n              placeholder: user.street,\n              onChange: event => updateStreet(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"country\",\n              placeholder: user.country,\n              onChange: event => updateCountry(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: 300\n              },\n              name: \"password\",\n              placeholder: user.password,\n              onChange: event => updatePassword(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: updateRole,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                disabled: true,\n                children: user.Role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SuperAdmin\",\n                children: \"SuperAdmin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Employer Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: updateCompany,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                disabled: true,\n                children: user.societe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this), companies && companies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.Nom,\n                children: item.Nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 67\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                appearance: \"primary\",\n                onClick: handleSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                appearance: \"default\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }, this);\n}\n\n_s(EditEmployer, \"vj/MZxkJ4Tw4Ee8Rtf0TExHgZhs=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditEmployer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEmployer\");","map":{"version":3,"sources":["C:/Users/wajdi/OneDrive/Documents/Stage/PointSystem/Front/src/jsx/components/Dashboard/EditEmployer.js"],"names":["useParams","useHistory","React","useState","useEffect","axios","Form","FormGroup","FormControl","ControlLabel","ButtonToolbar","Button","EditEmployer","history","name","setName","email","setEmail","phone","setPhone","apartment","setApartment","zip","setZip","country","setCountry","city","setCity","password","setPassword","role","setRole","street","setStreet","societe","setSociete","companies","setCompanies","updateName","event","updateEmail","updatePhone","updateApartment","updateZip","updateCountry","updateCity","updateStreet","updatePassword","updateRole","target","value","console","log","updateCompany","handleSubmit","params","Role","resp","put","id","push","status","data","setData","fetchCompanies","get","then","response","user","setUser","u_url","fetchUser","display","alignItems","justifyContent","width","marginLeft","map","item","Nom"],"mappings":"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","sourcesContent":["import { useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport 'rsuite/dist/styles/rsuite-default.min.css'\nimport { Form, FormGroup, FormControl, ControlLabel, ButtonToolbar, Button } from 'rsuite'\n\nexport default function EditEmployer() {\n\n\n    let history = useHistory();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [apartment, setApartment] = useState('');\n    const [zip, setZip] = useState('');\n    const [country, setCountry] = useState('');\n    const [city, setCity] = useState('');\n    const [password, setPassword] = useState('');\n    const [role, setRole] = useState('');\n    const [street, setStreet] = useState('');\n    const [societe, setSociete] = useState('');\n    const [companies, setCompanies] = useState('');\n\n\n    const updateName = (event) => { setName(event) }\n    const updateEmail = (event) => { setEmail(event)}\n    const updatePhone = (event) => { setPhone(event)}\n    const updateApartment = (event) => { setApartment(event)}\n    const updateZip = (event) => { setZip(event)}\n    const updateCountry = (event) => { setCountry(event)}\n    const updateCity = (event) => { setCity(event)}\n    const updateStreet = (event) => { setStreet(event)}\n    const updatePassword = (event) => { setPassword(event)}\n    const updateRole= (event) => { setRole(event.target.value);console.log(event.target.value)}\n    const updateCompany= (event) => { setSociete(event.target.value);console.log(event.target.value)}\n\n    const handleSubmit = async () => {\n\n            const params = {\n                name: name,\n                email: email,\n                phone: phone,\n                apartment: apartment,\n                zip: zip,\n                country: country,\n                street: street,\n                city: city,\n                password: password,\n                Role: role,\n                societe: societe\n              }\n            \n            //var  id = useParams();\n\n            //console.log(id);\n\n            //return false;\n\n            let resp = await axios.put(`http://localhost:4000/users/${id}`, params);\n            history.push(\"/Employers\");\n    \n            console.log(resp.status)\n\n\n    }\n\n    let {id} = useParams()\n    const [data, setData] = useState('');\n    //console.log(id)\n    const fetchCompanies = () => {axios.get(\"http://localhost:4000/societes\").then((response) => {setCompanies(response.data);})};\n    const [user, setUser] = useState([]);\n    const u_url = 'http://localhost:4000/users/'+id\n    const fetchUser = () => {\n        axios\n            .get(u_url).then((response) => { setUser(response.data)})\n    };\n    useEffect(() => {\n        fetchCompanies();\n        fetchUser();\n        console.log(data)\n    }, []);\n\n\n\n    return (\n            <div>\n            <center>\n                <Form style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                    <div >\n                    <FormGroup>\n                        <ControlLabel>Employer Name</ControlLabel>\n                        <FormControl style={{ width: 300 }} placeholder={user.name}  onChange={(event) => updateName(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer Email</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"email\" placeholder={user.email} onChange={(event) => updateEmail(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer Phone</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"phone\" placeholder={user.phone} onChange={(event) => updatePhone(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer Apartment</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"apartment\" placeholder={user.apartment} onChange={(event) => updateApartment(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer Zip Code</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"zip\" placeholder={user.zip} onChange={(event) => updateZip(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer City</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"city\" placeholder={user.city} onChange={(event) => updateCity(event)} />\n                    </FormGroup>\n                    </div>\n                    <div style={{marginLeft:'50px'}}>\n                    <FormGroup>\n                        <ControlLabel>Employer Street</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"street\" placeholder={user.street} onChange={(event) => updateStreet(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer Country</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"country\" placeholder={user.country} onChange={(event) => updateCountry(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Employer Password</ControlLabel>\n                        <FormControl style={{ width: 300 }} name=\"password\" placeholder={user.password} onChange={(event) => updatePassword(event)} />\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Employer Role</ControlLabel>\n                    <select  onChange={updateRole}>\n                            <option selected disabled>\n                            {user.Role}\n                            </option>\n                            <option value=\"admin\">admin</option>\n                            <option value=\"SuperAdmin\">SuperAdmin</option>\n                            <option value=\"user\">User</option>\n                    </select>\n                    </FormGroup>\n                    <FormGroup>\n                    <ControlLabel>Employer Company</ControlLabel>\n                    <select  onChange={updateCompany}>\n                            <option selected disabled>\n                            {user.societe}\n                            </option>\n                            {companies && companies.map((item) => <option value={item.Nom}>{item.Nom}</option>)}\n                    </select>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <ButtonToolbar>\n                            <Button appearance=\"primary\" onClick={handleSubmit}>Submit</Button>\n                            <Button appearance=\"default\"  >Cancel</Button>\n                        </ButtonToolbar>\n                    </FormGroup>\n                    </div>\n                </Form>\n            </center>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}